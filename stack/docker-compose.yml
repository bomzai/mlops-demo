services:
  mlflow_server:
    restart: always
    image: mlflow:arm64
    build: ./mlflow
    container_name: mlflow_server
    ports:
      - 5000:5000
    expose:
        - "5000"
    networks:
        - public
    depends_on:
      - postgres
    command: mlflow server --host 0.0.0.0 --backend-store-uri postgresql://mlflow:mlflow123@postgres:5432/mlflow --artifacts-destination /home/mlflow/mlartifacts #--default-artifact-root s3://mlflow_bucket/mlflow/       
  postgres:
    image: postgres:15
    container_name: postgres
    hostname: postgres
    expose:
      - "5432"
    networks:
      - public
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  setup-container:
    image: mlops-demo/setup-container:1
    build: ./setup-container
    container_name: setup-container
    networks:
      - public
    environment:
      PGPASSWORD: "password"
      PGUSER: "postgres"
      PGHOST: "postgres"
      PGPORT: "5432"
      CODER_ACCESS_URL: "http://coder:7080"
      CODER_FIRST_USER_USERNAME: "admin"
      CODER_FIRST_USER_EMAIL: "admin@bomzai.fr"
      CODER_FIRST_USER_PASSWORD: "*ChangeMe2023"
      CODER_FIRST_USER_TRIAL: "false"
    volumes:
      - "./setup-container:/setup-container:rwx"
    depends_on:
      postgres:
        condition: service_healthy
  coder:
    restart: always
    image: ghcr.io/coder/coder:v0.23.4
    container_name: coder
    ports:
      - 7080:7080
    expose:
        - "7080"
    networks:
      - public
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      - "./coder/template:/coder/template:rw"
    environment:
      CODER_PG_CONNECTION_URL: "postgresql://postgres:password@postgres:5432?sslmode=disable"
      CODER_HTTP_ADDRESS: "0.0.0.0:7080"
      CODER_ACCESS_URL: "http://localhost:7080"
      CODER_BROWSER_ONLY: "true"
    depends_on:
      postgres:
        condition: service_healthy
    group_add:
      - "1002"
  prefect:
    restart: always
    image: prefecthq/prefect:2.7.10-python3.10
    container_name: prefect
    command: "prefect orion start"
    ports:
      - 4200:4200
    expose:
        - "4200"
    networks:
      - public
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    environment:
      PREFECT_API_URL: "http://localhost:4200/api"
      PREFECT_ORION_API_PORT: "4200"
      PREFECT_ORION_DATABASE_CONNECTION_URL: "postgresql+asyncpg://prefect:prefect123@postgres:5432/prefect"
      PREFECT_ORION_API_HOST: "0.0.0.0"
    depends_on:
      postgres:
        condition: service_healthy
    group_add:
      - "1002"

networks:
    public:
        driver: bridge

