# Configuration for airbyte/destination-postgres
# Documentation about this connector can be found at https://docs.airbyte.com/integrations/destinations/postgres
resource_name: "postgres_athlete"
definition_type: destination
definition_id: 25c5221d-dce2-4163-ade9-739ef790f503
definition_image: airbyte/destination-postgres
definition_version: 0.3.27

# EDIT THE CONFIGURATION BELOW!
configuration:
  ssl: true # OPTIONAL | boolean | Encrypt data using SSL. When activating SSL, please select one of the connection modes.
  host: "localhost" # REQUIRED | string | Hostname of the database.
  port: 5444 # REQUIRED | integer | Port of the database. | Example: 5432
  schema: "airbyte" # REQUIRED | string | The default schema tables are written to if the source does not specify a namespace. The usual value for this field is "public". | Example: public
  database: ${AIRBYTE_POSTGRES_DB} # REQUIRED | string | Name of the database.
  password: ${AIRBYTE_POSTGRES_PASSWORD} # SECRET (please store in environment variables) | OPTIONAL | string | Password associated with the username.
  ssl_mode:
    ## -------- Pick one valid structure among the examples below: --------
    mode: "disable" # REQUIRED | string
    ## -------- Another valid structure for ssl_mode: --------
    # mode: "allow" # REQUIRED | string
    ## -------- Another valid structure for ssl_mode: --------
    # mode: "prefer" # REQUIRED | string
    ## -------- Another valid structure for ssl_mode: --------
    # mode: "require" # REQUIRED | string
    ## -------- Another valid structure for ssl_mode: --------
    # mode: "verify-ca" # REQUIRED | string
    # ca_certificate: ${CA_CERTIFICATE} # SECRET (please store in environment variables) | REQUIRED | string | CA certificate
    # client_key_password: ${CLIENT_KEY_PASSWORD} # SECRET (please store in environment variables) | OPTIONAL | string | Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.
    ## -------- Another valid structure for ssl_mode: --------
    # mode: "verify-full" # REQUIRED | string
    # client_key: ${CLIENT_KEY} # SECRET (please store in environment variables) | REQUIRED | string | Client key
    # ca_certificate: ${CA_CERTIFICATE} # SECRET (please store in environment variables) | REQUIRED | string | CA certificate
    # client_certificate: ${CLIENT_CERTIFICATE} # SECRET (please store in environment variables) | REQUIRED | string | Client certificate
    # client_key_password: ${CLIENT_KEY_PASSWORD} # SECRET (please store in environment variables) | OPTIONAL | string | Password for keystorage. This field is optional. If you do not add it - the password will be generated automatically.
  username: ${AIRBYTE_POSTGRES_USER} # REQUIRED | string | Username to use to access the database.
  tunnel_method:
    ## -------- Pick one valid structure among the examples below: --------
    tunnel_method: "NO_TUNNEL" # REQUIRED | string | No ssh tunnel needed to connect to database
    ## -------- Another valid structure for tunnel_method: --------
    # ssh_key: ${SSH_KEY} # SECRET (please store in environment variables) | REQUIRED | string | OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )
    # tunnel_host: # REQUIRED | string | Hostname of the jump server host that allows inbound ssh tunnel.
    # tunnel_port: 22 # REQUIRED | integer | Port on the proxy/jump server that accepts inbound ssh connections. | Example: 22
    # tunnel_user: # REQUIRED | string | OS-level username for logging into the jump server host.
    # tunnel_method: "SSH_KEY_AUTH" # REQUIRED | string | Connect through a jump server tunnel host using username and ssh key
    ## -------- Another valid structure for tunnel_method: --------
    # tunnel_host: # REQUIRED | string | Hostname of the jump server host that allows inbound ssh tunnel.
    # tunnel_port: 22 # REQUIRED | integer | Port on the proxy/jump server that accepts inbound ssh connections. | Example: 22
    # tunnel_user: # REQUIRED | string | OS-level username for logging into the jump server host
    # tunnel_method: "SSH_PASSWORD_AUTH" # REQUIRED | string | Connect through a jump server tunnel host using username and password authentication
    # tunnel_user_password: ${TUNNEL_USER_PASSWORD} # SECRET (please store in environment variables) | REQUIRED | string | OS-level password for logging into the jump server host
  jdbc_url_params: "" # OPTIONAL | string | Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).